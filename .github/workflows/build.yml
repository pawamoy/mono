# Copyright (c) 2019-2023 Martin Donath <martin.donath@squidfunk.com>

# All rights reserved. No part of this computer program(s) may be used,
# reproduced, stored in any retrieval system, or transmitted, in any form or
# by any means, electronic, mechanical, photocopying, recording, or otherwise
# without prior written permission.

# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.

name: build
on:
  - push
  - pull_request

jobs:
  build:
    name: Build
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:

      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get relevant commit sha
        id: since
        run: |
          if [ "$(git branch --show-current)" != "master" ]; then
            echo "::set-output name=sha::$(git merge-base origin/master HEAD)"
          else
            echo "::set-output name=sha::"
          fi

      # -----------------------------------------------------------------------

      - name: Set up runtime
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          registry-url: https://npm.pkg.github.com/
          scope: "@squidfunk"

      - name: Set up dependency cache
        uses: actions/cache@v3
        id: dependency
        with:
          key: ${{ github.ref }}-${{ hashFiles('**/package-lock.json') }}
          path: |
            **/node_modules

      - name: Set up dependencies
        run: npm install

      # -----------------------------------------------------------------------

      - name: Set up build cache
        if: github.ref != 'refs/heads/master'
        uses: actions/cache@v3
        id: build
        with:
          key: ${{ github.ref }}
          path: |
            packages/*/dist
            **/.eslintcache

      - name: Set up build
        if: steps.build.outputs.cache-hit != 'true'
        run: |
          npx lerna run build --scope "@squidfunk/mono-transform"
          npx lerna run build

      # -----------------------------------------------------------------------

      - name: Changed packages - check
        run: npx lerna run check --since ${{ steps.since.outputs.sha }}

      - name: Changed packages - build
        run: npx lerna run build --since ${{ steps.since.outputs.sha }}

      - name: Changed packages - test
        run: npx lerna run test --since ${{ steps.since.outputs.sha }}
